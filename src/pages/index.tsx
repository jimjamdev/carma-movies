import { useEffect, useState } from 'react';
import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import { Button } from '~components/atoms/button';
import { config } from '~config';

import { IMovieData } from '~types';

import {
  getMovies,
  moviesSelector,
  useAppDispatch,
  useAppSelector,
  wrapper,
} from '~store';

type IHomePage = {
  moviesSSR: IMovieData;
};

const Home: NextPage<IHomePage> = ({ moviesSSR }) => {
  const [movies, setMovies] = useState(moviesSSR?.results);
  const [page, setPage] = useState(1);
  const [sort, setSort] = useState('popularity');
  const [sortDirection, setSortDirection] = useState('desc');

  const dispatch = useAppDispatch();
  const { data, loading, error } = useAppSelector(moviesSelector);

  const fetchMovies = () => {
    dispatch(
      getMovies({
        params: {
          page,
          sort_by: `${sort}.{${sortDirection}`,
        },
      }),
    );
  };

  const toggleDirection = () => {
    if (sortDirection === 'desc') {
      return setSortDirection('asc');
    } else {
      return setSortDirection('desc');
    }
  };

  console.log('moviesSSR', moviesSSR?.results);

  /*useEffect(() => {
    fetchMovies();
  }, [page, dispatch, sort, sortDirection]);*/

  /*useEffect(() => {
    setMovies(data?.results);
  }, [data]);*/

  console.log(
    'data',
    data,
    'page',
    page,
    'sort',
    sort,
    'sortDir',
    sortDirection,
  );

  return (
    <main>
      <Head>
        <title>Carma Movie DB</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Button onClick={toggleDirection}>DESC</Button>
      {loading && 'loading...'}
      {error && error}
      {movies &&
        movies.map((movie) => {
          return (
            <div key={movie.title}>
              {movie?.title}
              {movie.poster_path && (
                <Image
                  src={`${config.imagePath}/w500${movie.poster_path}`}
                  alt={movie.title}
                  width={64}
                  height={96}
                />
              )}
            </div>
          );
        })}
    </main>
  );
};

export const getServerSideProps = wrapper.getServerSideProps(
  (store) => async () => {
    /* We want the fetch on the server for SEO and page load speed if required */
    /* You can ignore this if it's a backend app behind a login and instead, use */
    /*
  useEffect(() => {
    dispatch(getMovies());
  }, [dispatch]);
  */
    const req = await store.dispatch(
      getMovies({ params: { page: 1, sort_by: 'popularity.desc' } }),
    );
    const { payload = {} } = req;
    return {
      props: {
        moviesSSR: payload,
      },
    };
  },
);

export default Home;
